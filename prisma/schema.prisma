generator client {
  provider        = "prisma-client-js"
  output          = "../src/generated/prisma"
  previewFeatures = ["multiSchema"]
}

datasource db {
  provider  = "postgresql"
  url       = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
  schemas   = ["auth", "public"]
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model audit_log_entries {
  instance_id String?   @db.Uuid
  id          String    @id @db.Uuid
  payload     Json?     @db.Json
  created_at  DateTime? @db.Timestamptz(6)
  ip_address  String    @default("") @db.VarChar(64)

  @@index([instance_id], map: "audit_logs_instance_id_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model flow_state {
  id                     String                @id @db.Uuid
  user_id                String?               @db.Uuid
  auth_code              String
  code_challenge_method  code_challenge_method
  code_challenge         String
  provider_type          String
  provider_access_token  String?
  provider_refresh_token String?
  created_at             DateTime?             @db.Timestamptz(6)
  updated_at             DateTime?             @db.Timestamptz(6)
  authentication_method  String
  auth_code_issued_at    DateTime?             @db.Timestamptz(6)
  saml_relay_states      saml_relay_states[]

  @@index([created_at(sort: Desc)])
  @@index([auth_code], map: "idx_auth_code")
  @@index([user_id, authentication_method], map: "idx_user_id_auth_method")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model identities {
  provider_id     String
  user_id         String     @db.Uuid
  identity_data   Json
  provider        String
  last_sign_in_at DateTime?  @db.Timestamptz(6)
  created_at      DateTime?  @db.Timestamptz(6)
  updated_at      DateTime?  @db.Timestamptz(6)
  email           String?    @default(dbgenerated("lower((identity_data ->> 'email'::text))"))
  id              String     @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  users           auth_users @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([provider_id, provider], map: "identities_provider_id_provider_unique")
  @@index([email])
  @@index([user_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model instances {
  id              String    @id @db.Uuid
  uuid            String?   @db.Uuid
  raw_base_config String?
  created_at      DateTime? @db.Timestamptz(6)
  updated_at      DateTime? @db.Timestamptz(6)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_amr_claims {
  session_id            String   @db.Uuid
  created_at            DateTime @db.Timestamptz(6)
  updated_at            DateTime @db.Timestamptz(6)
  authentication_method String
  id                    String   @id(map: "amr_id_pk") @db.Uuid
  sessions              sessions @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([session_id, authentication_method], map: "mfa_amr_claims_session_id_authentication_method_pkey")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_challenges {
  id                     String      @id @db.Uuid
  factor_id              String      @db.Uuid
  created_at             DateTime    @db.Timestamptz(6)
  verified_at            DateTime?   @db.Timestamptz(6)
  ip_address             String      @db.Inet
  otp_code               String?
  web_authn_session_data Json?
  mfa_factors            mfa_factors @relation(fields: [factor_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "mfa_challenges_auth_factor_id_fkey")

  @@index([created_at(sort: Desc)], map: "mfa_challenge_created_at_idx")
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model mfa_factors {
  id                   String           @id @db.Uuid
  user_id              String           @db.Uuid
  friendly_name        String?
  factor_type          factor_type
  status               factor_status
  created_at           DateTime         @db.Timestamptz(6)
  updated_at           DateTime         @db.Timestamptz(6)
  secret               String?
  phone                String?
  last_challenged_at   DateTime?        @unique @db.Timestamptz(6)
  web_authn_credential Json?
  web_authn_aaguid     String?          @db.Uuid
  mfa_challenges       mfa_challenges[]
  users                auth_users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, phone], map: "unique_phone_factor_per_user")
  @@index([user_id, created_at], map: "factor_id_created_at_idx")
  @@index([user_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model one_time_tokens {
  id         String              @id @db.Uuid
  user_id    String              @db.Uuid
  token_type one_time_token_type
  token_hash String
  relates_to String
  created_at DateTime            @default(now()) @db.Timestamp(6)
  updated_at DateTime            @default(now()) @db.Timestamp(6)
  users      auth_users          @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@unique([user_id, token_type])
  @@index([relates_to], map: "one_time_tokens_relates_to_hash_idx", type: Hash)
  @@index([token_hash], map: "one_time_tokens_token_hash_hash_idx", type: Hash)
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model refresh_tokens {
  instance_id String?   @db.Uuid
  id          BigInt    @id @default(autoincrement())
  token       String?   @unique(map: "refresh_tokens_token_unique") @db.VarChar(255)
  user_id     String?   @db.VarChar(255)
  revoked     Boolean?
  created_at  DateTime? @db.Timestamptz(6)
  updated_at  DateTime? @db.Timestamptz(6)
  parent      String?   @db.VarChar(255)
  session_id  String?   @db.Uuid
  sessions    sessions? @relation(fields: [session_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([instance_id])
  @@index([instance_id, user_id])
  @@index([parent])
  @@index([session_id, revoked])
  @@index([updated_at(sort: Desc)])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_providers {
  id                String        @id @db.Uuid
  sso_provider_id   String        @db.Uuid
  entity_id         String        @unique
  metadata_xml      String
  metadata_url      String?
  attribute_mapping Json?
  created_at        DateTime?     @db.Timestamptz(6)
  updated_at        DateTime?     @db.Timestamptz(6)
  name_id_format    String?
  sso_providers     sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model saml_relay_states {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  request_id      String
  for_email       String?
  redirect_to     String?
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  flow_state_id   String?       @db.Uuid
  flow_state      flow_state?   @relation(fields: [flow_state_id], references: [id], onDelete: Cascade, onUpdate: NoAction)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([created_at(sort: Desc)])
  @@index([for_email])
  @@index([sso_provider_id])
  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model schema_migrations {
  version String @id @db.VarChar(255)

  @@schema("auth")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
model sessions {
  id             String           @id @db.Uuid
  user_id        String           @db.Uuid
  created_at     DateTime?        @db.Timestamptz(6)
  updated_at     DateTime?        @db.Timestamptz(6)
  factor_id      String?          @db.Uuid
  aal            aal_level?
  not_after      DateTime?        @db.Timestamptz(6)
  refreshed_at   DateTime?        @db.Timestamp(6)
  user_agent     String?
  ip             String?          @db.Inet
  tag            String?
  mfa_amr_claims mfa_amr_claims[]
  refresh_tokens refresh_tokens[]
  users          auth_users       @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([not_after(sort: Desc)])
  @@index([user_id])
  @@index([user_id, created_at], map: "user_id_created_at_idx")
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_domains {
  id              String        @id @db.Uuid
  sso_provider_id String        @db.Uuid
  domain          String
  created_at      DateTime?     @db.Timestamptz(6)
  updated_at      DateTime?     @db.Timestamptz(6)
  sso_providers   sso_providers @relation(fields: [sso_provider_id], references: [id], onDelete: Cascade, onUpdate: NoAction)

  @@index([sso_provider_id])
  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model sso_providers {
  id                String              @id @db.Uuid
  resource_id       String?
  created_at        DateTime?           @db.Timestamptz(6)
  updated_at        DateTime?           @db.Timestamptz(6)
  saml_providers    saml_providers[]
  saml_relay_states saml_relay_states[]
  sso_domains       sso_domains[]

  @@schema("auth")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
/// This model contains row level security and requires additional setup for migrations. Visit https://pris.ly/d/row-level-security for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model auth_users {
  instance_id                       String?           @db.Uuid
  id                                String            @id @db.Uuid
  aud                               String?           @db.VarChar(255)
  role                              String?           @db.VarChar(255)
  email                             String?           @db.VarChar(255)
  encrypted_password                String?           @db.VarChar(255)
  email_confirmed_at                DateTime?         @db.Timestamptz(6)
  invited_at                        DateTime?         @db.Timestamptz(6)
  confirmation_token                String?           @db.VarChar(255)
  confirmation_sent_at              DateTime?         @db.Timestamptz(6)
  recovery_token                    String?           @db.VarChar(255)
  recovery_sent_at                  DateTime?         @db.Timestamptz(6)
  email_change_token_new            String?           @db.VarChar(255)
  email_change                      String?           @db.VarChar(255)
  email_change_sent_at              DateTime?         @db.Timestamptz(6)
  last_sign_in_at                   DateTime?         @db.Timestamptz(6)
  raw_app_meta_data                 Json?
  raw_user_meta_data                Json?
  is_super_admin                    Boolean?
  created_at                        DateTime?         @db.Timestamptz(6)
  updated_at                        DateTime?         @db.Timestamptz(6)
  phone                             String?           @unique
  phone_confirmed_at                DateTime?         @db.Timestamptz(6)
  phone_change                      String?           @default("")
  phone_change_token                String?           @default("") @db.VarChar(255)
  phone_change_sent_at              DateTime?         @db.Timestamptz(6)
  confirmed_at                      DateTime?         @default(dbgenerated("LEAST(email_confirmed_at, phone_confirmed_at)")) @db.Timestamptz(6)
  email_change_token_current        String?           @default("") @db.VarChar(255)
  email_change_confirm_status       Int?              @default(0) @db.SmallInt
  banned_until                      DateTime?         @db.Timestamptz(6)
  reauthentication_token            String?           @default("") @db.VarChar(255)
  reauthentication_sent_at          DateTime?         @db.Timestamptz(6)
  is_sso_user                       Boolean           @default(false)
  deleted_at                        DateTime?         @db.Timestamptz(6)
  is_anonymous                      Boolean           @default(false)
  identities                        identities[]
  mfa_factors                       mfa_factors[]
  one_time_tokens                   one_time_tokens[]
  sessions                          sessions[]
  bookings_bookings_guest_idTousers bookings[]        @relation("bookings_guest_idTousers")
  bookings_bookings_host_idTousers  bookings[]        @relation("bookings_host_idTousers")
  guest_profiles                    guest_profiles?
  host_profiles                     host_profiles?
  places                            places[]
  reviews                           reviews?
  users                             public_users?

  @@index([instance_id])
  @@index([is_anonymous])
  @@map("users")
  @@schema("auth")
}

/// This table contains exclusion constraints and requires additional setup for migrations. Visit https://pris.ly/d/exclusion-constraints for more info.
model bookings {
  booking_id                     String                    @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  place_id                       String                    @db.Uuid
  guest_id                       String                    @db.Uuid
  check_in_date                  DateTime                  @db.Date
  check_out_date                 DateTime                  @db.Date
  period                         Unsupported("daterange")? @default(dbgenerated("daterange(check_in_date, check_out_date, '[]'::text)"))
  payment_id                     String?                   @db.Uuid
  status                         status_enum               @default(REQUIRES_PAYMENT_METHOD)
  created_at                     DateTime                  @default(now()) @db.Timestamptz(6)
  updated_at                     DateTime                  @default(now()) @db.Timestamptz(6)
  host_id                        String?                   @db.Uuid
  users_bookings_guest_idTousers auth_users                @relation("bookings_guest_idTousers", fields: [guest_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  users_bookings_host_idTousers  auth_users?               @relation("bookings_host_idTousers", fields: [host_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  payment_records                payment_records?          @relation(fields: [payment_id], references: [payment_id], onDelete: NoAction, onUpdate: NoAction)
  places                         places                    @relation(fields: [place_id], references: [place_id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model conversations {
  conversation_id String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  created_at      DateTime   @default(now()) @db.Timestamptz(6)
  messages        messages[]

  @@schema("public")
}

model guest_profiles {
  guest_id               String     @id @db.Uuid
  total_collected_points Int        @default(0)
  total_available_points Int        @default(0)
  total_points_spent     Int        @default(0)
  created_at             DateTime   @default(now()) @db.Timestamptz(6)
  updated_at             DateTime   @default(now()) @db.Timestamptz(6)
  users                  auth_users @relation(fields: [guest_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "guest_profiles_guest_id_fkey1")

  @@schema("public")
}

model host_profiles {
  host_id         String     @id @db.Uuid
  is_nid_verified Boolean    @default(false)
  nid_photo_url   String?
  created_at      DateTime   @default(now()) @db.Timestamptz(6)
  updated_at      DateTime   @default(now()) @db.Timestamptz(6)
  users           auth_users @relation(fields: [host_id], references: [id], onDelete: NoAction, onUpdate: NoAction, map: "host_profiles_host_id_fkey1")

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model media {
  media_id   String @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  place_id   String @db.Uuid
  media_type String @db.VarChar(20)
  url        String
  places     places @relation(fields: [place_id], references: [place_id], onDelete: Cascade, onUpdate: NoAction)

  @@schema("public")
}

model messages {
  message_id                         String        @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  conversation_id                    String        @db.Uuid
  from_user_id                       String        @db.Uuid
  to_user_id                         String        @db.Uuid
  content                            String
  sent_at                            DateTime      @default(now()) @db.Timestamptz(6)
  conversations                      conversations @relation(fields: [conversation_id], references: [conversation_id], onDelete: Cascade, onUpdate: NoAction)
  users_messages_from_user_idTousers public_users  @relation("messages_from_user_idTousers", fields: [from_user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)
  users_messages_to_user_idTousers   public_users  @relation("messages_to_user_idTousers", fields: [to_user_id], references: [user_id], onDelete: Cascade, onUpdate: NoAction)

  @@index([conversation_id], map: "idx_messages_conversation")
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model payment_records {
  payment_id               String      @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  stripe_payment_intent_id String      @unique
  amount                   Decimal     @db.Decimal(10, 2)
  currency                 String      @db.Char(3)
  status                   status_enum
  payment_method           String?     @db.VarChar(100)
  receipt_url              String?
  created_at               DateTime    @default(now()) @db.Timestamptz(6)
  updated_at               DateTime    @default(now()) @db.Timestamptz(6)
  bookings                 bookings[]

  @@schema("public")
}

model place_tags {
  place_id String         @db.Uuid
  tag      place_tag_enum
  places   places         @relation(fields: [place_id], references: [place_id], onDelete: Cascade, onUpdate: NoAction)

  @@id([place_id, tag])
  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
/// This model contains an expression index which requires additional setup for migrations. Visit https://pris.ly/d/expression-indexes for more info.
model places {
  place_id       String          @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  place_type     place_type_enum
  guest_capacity Int
  bedroom_count  Int
  bed_count      Int
  bathroom_count Int
  size_sqm       Decimal?        @db.Decimal(7, 2)
  check_in_time  DateTime        @db.Time(6)
  check_out_time DateTime        @db.Time(6)
  location       String
  map_id         String?
  policy         String?
  price          Decimal         @db.Decimal(10, 2)
  currency       String          @db.Char(3)
  description    String?
  owner_id       String?         @db.Uuid
  created_at     DateTime        @default(now()) @db.Timestamptz(6)
  updated_at     DateTime        @default(now()) @db.Timestamptz(6)
  deleted_at     DateTime?       @db.Timestamptz(6)
  bookings       bookings[]
  media          media[]
  place_tags     place_tags[]
  users          auth_users?     @relation(fields: [owner_id], references: [id], onDelete: NoAction, onUpdate: NoAction)
  reviews        reviews[]

  @@schema("public")
}

/// This table contains check constraints and requires additional setup for migrations. Visit https://pris.ly/d/check-constraints for more info.
model reviews {
  review_id  String     @id @db.Uuid
  place_id   String     @db.Uuid
  rating     Int
  message    String?
  created_at DateTime   @default(now()) @db.Timestamptz(6)
  places     places     @relation(fields: [place_id], references: [place_id], onDelete: Cascade, onUpdate: NoAction)
  users      auth_users @relation(fields: [review_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@index([place_id], map: "idx_reviews_place")
  @@schema("public")
}

model public_users {
  user_id                               String     @id @default(dbgenerated("uuid_generate_v4()")) @db.Uuid
  first_name                            String
  last_name                             String
  contact_number                        String?    @db.VarChar(20)
  date_of_birth                         DateTime?  @db.Date
  display_photo_url                     String?
  is_host                               Boolean?   @default(false)
  bookings_bookings_guest_idTousers     bookings[] @relation("bookings_guest_idTousers")
  messages_messages_from_user_idTousers messages[] @relation("messages_from_user_idTousers")
  messages_messages_to_user_idTousers   messages[] @relation("messages_to_user_idTousers")
  users                                 auth_users @relation(fields: [user_id], references: [id], onDelete: NoAction, onUpdate: NoAction)

  @@map("users")
  @@schema("public")
}

enum aal_level {
  aal1
  aal2
  aal3

  @@schema("auth")
}

enum code_challenge_method {
  s256
  plain

  @@schema("auth")
}

enum factor_status {
  unverified
  verified

  @@schema("auth")
}

enum factor_type {
  totp
  webauthn
  phone

  @@schema("auth")
}

enum one_time_token_type {
  confirmation_token
  reauthentication_token
  recovery_token
  email_change_token_new
  email_change_token_current
  phone_change_token

  @@schema("auth")
}

enum place_tag_enum {
  IS_PET_FRIENDLY
  ECO_FRIENDLY
  NEO_NATURE
  QUIET_PLACE

  @@schema("public")
}

enum place_type_enum {
  HOTEL_ROOM
  NORMAL_ROOM
  APARTMENT
  STUDIO_APARTMENT

  @@schema("public")
}

enum status_enum {
  SUCCEEDED
  REQUIRES_PAYMENT_METHOD
  REQUIRES_ACTION
  FAILED
  REFUNDED

  @@schema("public")
}
